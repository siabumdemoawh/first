/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/": {
    get: {
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/kode_akun": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.kode_akun.id"];
          createdDate?: parameters["rowFilter.kode_akun.createdDate"];
          createdBy?: parameters["rowFilter.kode_akun.createdBy"];
          updatedDate?: parameters["rowFilter.kode_akun.updatedDate"];
          updatedBy?: parameters["rowFilter.kode_akun.updatedBy"];
          kode?: parameters["rowFilter.kode_akun.kode"];
          deskripsi?: parameters["rowFilter.kode_akun.deskripsi"];
          need_upload?: parameters["rowFilter.kode_akun.need_upload"];
          bukti_upload?: parameters["rowFilter.kode_akun.bukti_upload"];
          pos_laporan?: parameters["rowFilter.kode_akun.pos_laporan"];
          pos_saldo?: parameters["rowFilter.kode_akun.pos_saldo"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["kode_akun"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** kode_akun */
          kode_akun?: definitions["kode_akun"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.kode_akun.id"];
          createdDate?: parameters["rowFilter.kode_akun.createdDate"];
          createdBy?: parameters["rowFilter.kode_akun.createdBy"];
          updatedDate?: parameters["rowFilter.kode_akun.updatedDate"];
          updatedBy?: parameters["rowFilter.kode_akun.updatedBy"];
          kode?: parameters["rowFilter.kode_akun.kode"];
          deskripsi?: parameters["rowFilter.kode_akun.deskripsi"];
          need_upload?: parameters["rowFilter.kode_akun.need_upload"];
          bukti_upload?: parameters["rowFilter.kode_akun.bukti_upload"];
          pos_laporan?: parameters["rowFilter.kode_akun.pos_laporan"];
          pos_saldo?: parameters["rowFilter.kode_akun.pos_saldo"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.kode_akun.id"];
          createdDate?: parameters["rowFilter.kode_akun.createdDate"];
          createdBy?: parameters["rowFilter.kode_akun.createdBy"];
          updatedDate?: parameters["rowFilter.kode_akun.updatedDate"];
          updatedBy?: parameters["rowFilter.kode_akun.updatedBy"];
          kode?: parameters["rowFilter.kode_akun.kode"];
          deskripsi?: parameters["rowFilter.kode_akun.deskripsi"];
          need_upload?: parameters["rowFilter.kode_akun.need_upload"];
          bukti_upload?: parameters["rowFilter.kode_akun.bukti_upload"];
          pos_laporan?: parameters["rowFilter.kode_akun.pos_laporan"];
          pos_saldo?: parameters["rowFilter.kode_akun.pos_saldo"];
        };
        body: {
          /** kode_akun */
          kode_akun?: definitions["kode_akun"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/log_book": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.log_book.id"];
          createdDate?: parameters["rowFilter.log_book.createdDate"];
          createdBy?: parameters["rowFilter.log_book.createdBy"];
          updatedDate?: parameters["rowFilter.log_book.updatedDate"];
          updatedBy?: parameters["rowFilter.log_book.updatedBy"];
          kodeAkunID?: parameters["rowFilter.log_book.kodeAkunID"];
          keterangan?: parameters["rowFilter.log_book.keterangan"];
          debet?: parameters["rowFilter.log_book.debet"];
          kredit?: parameters["rowFilter.log_book.kredit"];
          saldo?: parameters["rowFilter.log_book.saldo"];
          qty?: parameters["rowFilter.log_book.qty"];
          harga_satuan?: parameters["rowFilter.log_book.harga_satuan"];
          total?: parameters["rowFilter.log_book.total"];
          angsuran?: parameters["rowFilter.log_book.angsuran"];
          cash?: parameters["rowFilter.log_book.cash"];
          unitID?: parameters["rowFilter.log_book.unitID"];
          form?: parameters["rowFilter.log_book.form"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["log_book"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** log_book */
          log_book?: definitions["log_book"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.log_book.id"];
          createdDate?: parameters["rowFilter.log_book.createdDate"];
          createdBy?: parameters["rowFilter.log_book.createdBy"];
          updatedDate?: parameters["rowFilter.log_book.updatedDate"];
          updatedBy?: parameters["rowFilter.log_book.updatedBy"];
          kodeAkunID?: parameters["rowFilter.log_book.kodeAkunID"];
          keterangan?: parameters["rowFilter.log_book.keterangan"];
          debet?: parameters["rowFilter.log_book.debet"];
          kredit?: parameters["rowFilter.log_book.kredit"];
          saldo?: parameters["rowFilter.log_book.saldo"];
          qty?: parameters["rowFilter.log_book.qty"];
          harga_satuan?: parameters["rowFilter.log_book.harga_satuan"];
          total?: parameters["rowFilter.log_book.total"];
          angsuran?: parameters["rowFilter.log_book.angsuran"];
          cash?: parameters["rowFilter.log_book.cash"];
          unitID?: parameters["rowFilter.log_book.unitID"];
          form?: parameters["rowFilter.log_book.form"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.log_book.id"];
          createdDate?: parameters["rowFilter.log_book.createdDate"];
          createdBy?: parameters["rowFilter.log_book.createdBy"];
          updatedDate?: parameters["rowFilter.log_book.updatedDate"];
          updatedBy?: parameters["rowFilter.log_book.updatedBy"];
          kodeAkunID?: parameters["rowFilter.log_book.kodeAkunID"];
          keterangan?: parameters["rowFilter.log_book.keterangan"];
          debet?: parameters["rowFilter.log_book.debet"];
          kredit?: parameters["rowFilter.log_book.kredit"];
          saldo?: parameters["rowFilter.log_book.saldo"];
          qty?: parameters["rowFilter.log_book.qty"];
          harga_satuan?: parameters["rowFilter.log_book.harga_satuan"];
          total?: parameters["rowFilter.log_book.total"];
          angsuran?: parameters["rowFilter.log_book.angsuran"];
          cash?: parameters["rowFilter.log_book.cash"];
          unitID?: parameters["rowFilter.log_book.unitID"];
          form?: parameters["rowFilter.log_book.form"];
        };
        body: {
          /** log_book */
          log_book?: definitions["log_book"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/roles": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.roles.id"];
          nama?: parameters["rowFilter.roles.nama"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["roles"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** roles */
          roles?: definitions["roles"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.roles.id"];
          nama?: parameters["rowFilter.roles.nama"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.roles.id"];
          nama?: parameters["rowFilter.roles.nama"];
        };
        body: {
          /** roles */
          roles?: definitions["roles"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/settings": {
    get: {
      parameters: {
        query: {
          greetings?: parameters["rowFilter.settings.greetings"];
          about?: parameters["rowFilter.settings.about"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["settings"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** settings */
          settings?: definitions["settings"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          greetings?: parameters["rowFilter.settings.greetings"];
          about?: parameters["rowFilter.settings.about"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          greetings?: parameters["rowFilter.settings.greetings"];
          about?: parameters["rowFilter.settings.about"];
        };
        body: {
          /** settings */
          settings?: definitions["settings"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/units": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.units.id"];
          nama?: parameters["rowFilter.units.nama"];
          email?: parameters["rowFilter.units.email"];
          phone?: parameters["rowFilter.units.phone"];
          alamat?: parameters["rowFilter.units.alamat"];
          createdDate?: parameters["rowFilter.units.createdDate"];
          createdBy?: parameters["rowFilter.units.createdBy"];
          updatedDate?: parameters["rowFilter.units.updatedDate"];
          updatedBy?: parameters["rowFilter.units.updatedBy"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["units"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** units */
          units?: definitions["units"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.units.id"];
          nama?: parameters["rowFilter.units.nama"];
          email?: parameters["rowFilter.units.email"];
          phone?: parameters["rowFilter.units.phone"];
          alamat?: parameters["rowFilter.units.alamat"];
          createdDate?: parameters["rowFilter.units.createdDate"];
          createdBy?: parameters["rowFilter.units.createdBy"];
          updatedDate?: parameters["rowFilter.units.updatedDate"];
          updatedBy?: parameters["rowFilter.units.updatedBy"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.units.id"];
          nama?: parameters["rowFilter.units.nama"];
          email?: parameters["rowFilter.units.email"];
          phone?: parameters["rowFilter.units.phone"];
          alamat?: parameters["rowFilter.units.alamat"];
          createdDate?: parameters["rowFilter.units.createdDate"];
          createdBy?: parameters["rowFilter.units.createdBy"];
          updatedDate?: parameters["rowFilter.units.updatedDate"];
          updatedBy?: parameters["rowFilter.units.updatedBy"];
        };
        body: {
          /** units */
          units?: definitions["units"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/users": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.users.id"];
          createdDate?: parameters["rowFilter.users.createdDate"];
          createdBy?: parameters["rowFilter.users.createdBy"];
          updatedDate?: parameters["rowFilter.users.updatedDate"];
          updatedBy?: parameters["rowFilter.users.updatedBy"];
          fullname?: parameters["rowFilter.users.fullname"];
          email?: parameters["rowFilter.users.email"];
          alamat?: parameters["rowFilter.users.alamat"];
          phone?: parameters["rowFilter.users.phone"];
          unitID?: parameters["rowFilter.users.unitID"];
          roleID?: parameters["rowFilter.users.roleID"];
          avatar?: parameters["rowFilter.users.avatar"];
          isActive?: parameters["rowFilter.users.isActive"];
          isOnline?: parameters["rowFilter.users.isOnline"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["users"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** users */
          users?: definitions["users"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.users.id"];
          createdDate?: parameters["rowFilter.users.createdDate"];
          createdBy?: parameters["rowFilter.users.createdBy"];
          updatedDate?: parameters["rowFilter.users.updatedDate"];
          updatedBy?: parameters["rowFilter.users.updatedBy"];
          fullname?: parameters["rowFilter.users.fullname"];
          email?: parameters["rowFilter.users.email"];
          alamat?: parameters["rowFilter.users.alamat"];
          phone?: parameters["rowFilter.users.phone"];
          unitID?: parameters["rowFilter.users.unitID"];
          roleID?: parameters["rowFilter.users.roleID"];
          avatar?: parameters["rowFilter.users.avatar"];
          isActive?: parameters["rowFilter.users.isActive"];
          isOnline?: parameters["rowFilter.users.isOnline"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.users.id"];
          createdDate?: parameters["rowFilter.users.createdDate"];
          createdBy?: parameters["rowFilter.users.createdBy"];
          updatedDate?: parameters["rowFilter.users.updatedDate"];
          updatedBy?: parameters["rowFilter.users.updatedBy"];
          fullname?: parameters["rowFilter.users.fullname"];
          email?: parameters["rowFilter.users.email"];
          alamat?: parameters["rowFilter.users.alamat"];
          phone?: parameters["rowFilter.users.phone"];
          unitID?: parameters["rowFilter.users.unitID"];
          roleID?: parameters["rowFilter.users.roleID"];
          avatar?: parameters["rowFilter.users.avatar"];
          isActive?: parameters["rowFilter.users.isActive"];
          isOnline?: parameters["rowFilter.users.isOnline"];
        };
        body: {
          /** users */
          users?: definitions["users"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
}

export interface definitions {
  kode_akun: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    createdDate?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
     */
    createdBy?: string;
    /** Format: timestamp with time zone */
    updatedDate?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
     */
    updatedBy?: string;
    /** Format: real */
    kode: number;
    /** Format: text */
    deskripsi?: string;
    /** Format: boolean */
    need_upload: boolean;
    /**
     * Format: text
     * @description Note:
     * This is a Foreign Key to `buckets.name`.<fk table='buckets' column='name'/>
     */
    bukti_upload?: string;
    /**
     * Format: character varying
     * @default NERACA
     */
    pos_laporan: string;
    /**
     * Format: character varying
     * @default DEBET
     */
    pos_saldo: string;
  };
  log_book: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    createdDate?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
     */
    createdBy?: string;
    /** Format: timestamp with time zone */
    updatedDate?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
     */
    updatedBy?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `kode_akun.id`.<fk table='kode_akun' column='id'/>
     */
    kodeAkunID: string;
    /** Format: text */
    keterangan: string;
    /** Format: double precision */
    debet?: number;
    /** Format: double precision */
    kredit?: number;
    /** Format: double precision */
    saldo?: number;
    /** Format: bigint */
    qty?: number;
    /** Format: double precision */
    harga_satuan?: number;
    /** Format: double precision */
    total?: number;
    /** Format: double precision */
    angsuran?: number;
    /** Format: double precision */
    cash?: number;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `units.id`.<fk table='units' column='id'/>
     */
    unitID: string;
    /** Format: character varying */
    form?: string;
  };
  roles: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    /** Format: character varying */
    nama: string;
  };
  settings: {
    /** Format: text */
    greetings?: string;
    /** Format: text */
    about?: string;
  };
  units: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    /** Format: character varying */
    nama: string;
    /** Format: character varying */
    email: string;
    /** Format: character varying */
    phone?: string;
    /** Format: text */
    alamat?: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    createdDate: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
     */
    createdBy?: string;
    /** Format: timestamp with time zone */
    updatedDate?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
     */
    updatedBy?: string;
  };
  users: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    createdDate?: string;
    /** Format: character varying */
    createdBy?: string;
    /** Format: timestamp with time zone */
    updatedDate?: string;
    /** Format: character varying */
    updatedBy?: string;
    /** Format: character varying */
    fullname?: string;
    /** Format: character varying */
    email: string;
    /** Format: text */
    alamat?: string;
    /** Format: character varying */
    phone?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `units.id`.<fk table='units' column='id'/>
     */
    unitID: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `roles.id`.<fk table='roles' column='id'/>
     */
    roleID: string;
    /**
     * Format: text
     * @description Note:
     * This is a Foreign Key to `buckets.name`.<fk table='buckets' column='name'/>
     */
    avatar?: string;
    /** Format: boolean */
    isActive: boolean;
    /** Format: boolean */
    isOnline: boolean;
  };
}

export interface parameters {
  /**
   * @description Preference
   * @enum {string}
   */
  preferParams: "params=single-object";
  /**
   * @description Preference
   * @enum {string}
   */
  preferReturn: "return=representation" | "return=minimal" | "return=none";
  /**
   * @description Preference
   * @enum {string}
   */
  preferCount: "count=none";
  /** @description Filtering Columns */
  select: string;
  /** @description On Conflict */
  on_conflict: string;
  /** @description Ordering */
  order: string;
  /** @description Limiting and Pagination */
  range: string;
  /**
   * @description Limiting and Pagination
   * @default items
   */
  rangeUnit: string;
  /** @description Limiting and Pagination */
  offset: string;
  /** @description Limiting and Pagination */
  limit: string;
  /** @description kode_akun */
  "body.kode_akun": definitions["kode_akun"];
  /** Format: uuid */
  "rowFilter.kode_akun.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.kode_akun.createdDate": string;
  /** Format: uuid */
  "rowFilter.kode_akun.createdBy": string;
  /** Format: timestamp with time zone */
  "rowFilter.kode_akun.updatedDate": string;
  /** Format: uuid */
  "rowFilter.kode_akun.updatedBy": string;
  /** Format: real */
  "rowFilter.kode_akun.kode": string;
  /** Format: text */
  "rowFilter.kode_akun.deskripsi": string;
  /** Format: boolean */
  "rowFilter.kode_akun.need_upload": string;
  /** Format: text */
  "rowFilter.kode_akun.bukti_upload": string;
  /** Format: character varying */
  "rowFilter.kode_akun.pos_laporan": string;
  /** Format: character varying */
  "rowFilter.kode_akun.pos_saldo": string;
  /** @description log_book */
  "body.log_book": definitions["log_book"];
  /** Format: uuid */
  "rowFilter.log_book.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.log_book.createdDate": string;
  /** Format: uuid */
  "rowFilter.log_book.createdBy": string;
  /** Format: timestamp with time zone */
  "rowFilter.log_book.updatedDate": string;
  /** Format: uuid */
  "rowFilter.log_book.updatedBy": string;
  /** Format: uuid */
  "rowFilter.log_book.kodeAkunID": string;
  /** Format: text */
  "rowFilter.log_book.keterangan": string;
  /** Format: double precision */
  "rowFilter.log_book.debet": string;
  /** Format: double precision */
  "rowFilter.log_book.kredit": string;
  /** Format: double precision */
  "rowFilter.log_book.saldo": string;
  /** Format: bigint */
  "rowFilter.log_book.qty": string;
  /** Format: double precision */
  "rowFilter.log_book.harga_satuan": string;
  /** Format: double precision */
  "rowFilter.log_book.total": string;
  /** Format: double precision */
  "rowFilter.log_book.angsuran": string;
  /** Format: double precision */
  "rowFilter.log_book.cash": string;
  /** Format: uuid */
  "rowFilter.log_book.unitID": string;
  /** Format: character varying */
  "rowFilter.log_book.form": string;
  /** @description roles */
  "body.roles": definitions["roles"];
  /** Format: uuid */
  "rowFilter.roles.id": string;
  /** Format: character varying */
  "rowFilter.roles.nama": string;
  /** @description settings */
  "body.settings": definitions["settings"];
  /** Format: text */
  "rowFilter.settings.greetings": string;
  /** Format: text */
  "rowFilter.settings.about": string;
  /** @description units */
  "body.units": definitions["units"];
  /** Format: uuid */
  "rowFilter.units.id": string;
  /** Format: character varying */
  "rowFilter.units.nama": string;
  /** Format: character varying */
  "rowFilter.units.email": string;
  /** Format: character varying */
  "rowFilter.units.phone": string;
  /** Format: text */
  "rowFilter.units.alamat": string;
  /** Format: timestamp with time zone */
  "rowFilter.units.createdDate": string;
  /** Format: uuid */
  "rowFilter.units.createdBy": string;
  /** Format: timestamp with time zone */
  "rowFilter.units.updatedDate": string;
  /** Format: uuid */
  "rowFilter.units.updatedBy": string;
  /** @description users */
  "body.users": definitions["users"];
  /** Format: uuid */
  "rowFilter.users.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.users.createdDate": string;
  /** Format: character varying */
  "rowFilter.users.createdBy": string;
  /** Format: timestamp with time zone */
  "rowFilter.users.updatedDate": string;
  /** Format: character varying */
  "rowFilter.users.updatedBy": string;
  /** Format: character varying */
  "rowFilter.users.fullname": string;
  /** Format: character varying */
  "rowFilter.users.email": string;
  /** Format: text */
  "rowFilter.users.alamat": string;
  /** Format: character varying */
  "rowFilter.users.phone": string;
  /** Format: uuid */
  "rowFilter.users.unitID": string;
  /** Format: uuid */
  "rowFilter.users.roleID": string;
  /** Format: text */
  "rowFilter.users.avatar": string;
  /** Format: boolean */
  "rowFilter.users.isActive": string;
  /** Format: boolean */
  "rowFilter.users.isOnline": string;
}

export interface operations {}

export interface external {}
